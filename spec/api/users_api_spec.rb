=begin
#Catalog API

#This API gets and orders catalog items from different cloud sources.

OpenAPI spec version: 0.1.0
Contact: support@redhat.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'spec_helper'
require 'json'

# Unit tests for CatalogApiClient::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @instance = CatalogApiClient::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@instance).to be_instance_of(CatalogApiClient::UsersApi)
    end
  end

  # unit tests for add_to_order
  # Add an order item to an order in pending state
  # Adds an order item to an order in pending state 
  # @param order_id The Order ID
  # @param order_item 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_to_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_portfolio_items_with_portfolio
  # Get all portfolio items from a specific portfolio
  # Gets all portfilio items in the portfolio specified by the given ID. 
  # @param portfolio_id The Portfolio ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [PortfolioItemsCollection]
  describe 'fetch_portfolio_items_with_portfolio test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_order_items
  # Gets a list of items in a given order
  # Gets a list of items associated with an order. 
  # @param order_id The Order ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [OrderItemsCollection]
  describe 'list_order_items test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orders
  # Get a list of orders
  # Gets a list of orders associated with the logged in user. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [OrdersCollection]
  describe 'list_orders test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_portfolio_items
  # List all portfolio items
  # Gets a list of portfolio items. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [PortfolioItemsCollection]
  describe 'list_portfolio_items test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_portfolios
  # List portfolios
  # Gets a list of portfolios. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [PortfoliosCollection]
  describe 'list_portfolios test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_progress_messages
  # Gets a list of progress messages in an item
  # Gets a list of progress messages associated with an order item. As the item is being processed the provider can update the progress messages. 
  # @param order_item_id The Order Item ID
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @return [ProgressMessagesCollection]
  describe 'list_progress_messages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_provider_control_parameters
  # Gets the provider control parameters for this portfolio item; requires control paramaters provided when provisioning the portfolio item.
  # Gets the provider control parameters for a portfolio item. 
  # @param portfolio_item_id The Portfolio Item ID
  # @param [Hash] opts the optional parameters
  # @return [ProviderControlParameters]
  describe 'list_provider_control_parameters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_plans
  # Gets all service plans for a specific portfolio item; requires a connection to the topology service.
  # Gets all service plans for a portfolio item. 
  # @param portfolio_item_id The Portfolio Item ID
  # @param [Hash] opts the optional parameters
  # @return [Array<ServicePlan>]
  describe 'list_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for share_info
  # Fetch share information about this portfolio, the response would include a collection of groups and permissions with each group
  # Fetch share information about a portfolio 
  # @param portfolio_id The Portfolio ID
  # @param [Hash] opts the optional parameters
  # @return [Array<ShareInfo>]
  describe 'share_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_order_item
  # Gets an individual order item from a given order
  # Gets an order item associated with an order. 
  # @param order_id The Order ID
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [OrderItem]
  describe 'show_order_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_portfolio
  # Get a specific portfolio
  # Gets the portfolio specified by the portfolio ID. 
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Portfolio]
  describe 'show_portfolio test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_portfolio_item
  # Gets a specific portfolio item
  # Gets a specific portfolio item based on the portfolio item ID passed 
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [PortfolioItem]
  describe 'show_portfolio_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
